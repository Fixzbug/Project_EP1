version: "3.8"

services:
  ### DATABASE - MySQL ###
  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: P@ssword1234
      MYSQL_DATABASE: test
      MYSQL_USER: makerz
      MYSQL_PASSWORD: P@ssword1234
    ports:
      - "3306:3306"
    volumes:
      - ./backend/init-db:/docker-entrypoint-initdb.d  # Ensure correct path
      - mysql_data:/var/lib/mysql
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 3
      start_period: 20s
      timeout: 5s

  ### MQTT Broker - EMQX ###
  emqx:
    image: emqx/emqx:latest
    container_name: emqx
    restart: always
    ports:
      - "1883:1883"   # MQTT
      - "8083:8083"   # MQTT over WebSocket (ws://)
      - "8084:8084"   # MQTT over Secure WebSocket (wss://)
      - "8081:8081"   # EMQX Dashboard (HTTP)
      - "18083:18083" # External Dashboard Access
      - "8883:8883"   # Secure MQTT (mqtts://)
    environment:
      EMQX_ALLOW_ANONYMOUS: "true"
      EMQX_LISTENER__WS__DEFAULT__ENABLE: "true"  # Enable WebSocket (ws)
      EMQX_LISTENER__WSS__DEFAULT__ENABLE: "true" # Enable Secure WebSocket (wss)
      EMQX_LISTENER__WSS__DEFAULT__ACCEPTORS: 16  # Max Connections
      EMQX_LISTENER__WSS__DEFAULT__MAX_CONNECTIONS: 1024000
      EMQX_LISTENER__WSS__DEFAULT__SSL__ENABLE: "true"
      EMQX_LISTENER__WSS__DEFAULT__SSL__KEYFILE: "/etc/emqx/certs/key.pem"
      EMQX_LISTENER__WSS__DEFAULT__SSL__CERTFILE: "/etc/emqx/certs/cert.pem"
    volumes:
      - ./emqx_certs:/etc/emqx/certs  # Mount SSL Certificates
    networks:
      - mynetwork

  ### Node-RED ###
  node-red:
    image: nodered/node-red
    container_name: node-red
    restart: always
    ports:
      - "1880:1880"
    volumes:
      - node_red_data:/data
    networks:
      - mynetwork

  ### Backend - Node.js API ###
  backend:
    build: ./backend
    container_name: backend
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      emqx:
        condition: service_started
    ports:
      - "3000:3000"
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: makerz
      MYSQL_PASSWORD: P@ssword1234
      MYSQL_DATABASE: test
      MQTT_BROKER: mqtt://emqx
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      retries: 3
      start_period: 20s
      timeout: 5s

  ## Frontend - Ionic ###
  frontend:
    image: nginx:alpine
    container_name: frontend
    restart: always
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "80:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - mynetwork

volumes:
  mysql_data:
  node_red_data:

networks:
  mynetwork:
    driver: bridge
